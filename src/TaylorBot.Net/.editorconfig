root = true

# All files
[*]
end_of_line = lf
indent_style = space
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:warn

# Xml files
[*.xml]
indent_size = 2

[*.{cs,vb}]
charset = utf-8-bom
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_namespace_match_folder = true:suggestion


# Custom async event handlers are used that trigger these rules
# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = silent
# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = silent

# This project is not a library to be reused elsewhere
# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = none
# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = none
# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none
# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none
# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# General exceptions are caught in many places to log/avoid crashes
# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# Nested types are ok
# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = silent

# Empty interfaces are used for pseudo union types
# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none
# CA1859: Use concrete types when possible for improved performance
dotnet_diagnostic.CA1859.severity = silent

# URI-like string members are ok
# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = suggestion
# CA1055: URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = suggestion
# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = suggestion
# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = suggestion

# Nullable reference types are used, not necessary
# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# Need to investigate and fix this
# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = suggestion

# Member naming is relaxed to allow matching Discord JSON fields
# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = suggestion

# This is ok when it's a nested type vs member
# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = none

# Classes are often just created by reflection (deserialization)
# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = silent

# Instance members are used for DI for future-proofing
# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = silent

# Need to investigate and fix this
# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = silent

# Existing design sometimes depends on lowercase
# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = suggestion

# Not too worried about this, makes it easy to move classes to a csproj later
# CA1515: Consider making public types internal
dotnet_diagnostic.CA1515.severity = silent

# Argument exceptions are convenient for null checks and validation
# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = silent
